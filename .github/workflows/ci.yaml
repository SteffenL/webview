name: CI Pipeline
on: [push, pull_request]

jobs:
  build:
    name: build (${{ matrix.config.os }}, ${{ matrix.config.compiler.id }}, ${{ matrix.config.arch }})
    runs-on: ${{ matrix.config.image }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: linux,   image: ubuntu-latest,  compiler: { id: gcc,   ar: ar,  cc: gcc,   cxx: g++,     ld: ld   }, arch: x64,   toolchain-prefix: x86_64-linux-gnu-  }
          - { os: linux,   image: ubuntu-latest,  compiler: { id: gcc,   ar: ar,  cc: gcc,   cxx: g++,     ld: ld   }, arch: x86,   toolchain-prefix: i686-linux-gnu-    }
          - { os: linux,   image: ubuntu-latest,  compiler: { id: clang, ar: ar,  cc: clang, cxx: clang++, ld: ld   }, arch: x64,   toolchain-prefix: x86_64-linux-gnu-  }
          - { os: linux,   image: ubuntu-latest,  compiler: { id: clang, ar: ar,  cc: clang, cxx: clang++, ld: ld   }, arch: x86,   toolchain-prefix: i686-linux-gnu-    }
          - { os: macos,   image: macos-latest,   compiler: { id: clang, ar: ar,  cc: clang, cxx: clang++, ld: ld   }, arch: arm64, toolchain-prefix: ''                 }
          - { os: macos,   image: macos-latest,   compiler: { id: clang, ar: ar,  cc: clang, cxx: clang++, ld: ld   }, arch: x64,   toolchain-prefix: ''                 }
          - { os: windows, image: windows-latest, compiler: { id: msvc,  ar: lib, cc: cl,    cxx: cl,      ld: link }, arch: arm64, toolchain-prefix: ''                 }
          - { os: windows, image: windows-latest, compiler: { id: msvc,  ar: lib, cc: cl,    cxx: cl,      ld: link }, arch: x64,   toolchain-prefix: ''                 }
          - { os: windows, image: windows-latest, compiler: { id: msvc,  ar: lib, cc: cl,    cxx: cl,      ld: link }, arch: x86,   toolchain-prefix: ''                 }
          - { os: windows, image: windows-latest, compiler: { id: gcc,   ar: ar,  cc: gcc,   cxx: g++,     ld: ld   }, arch: x64,   toolchain-prefix: ''                 }
          - { os: windows, image: windows-latest, compiler: { id: gcc,   ar: ar,  cc: gcc,   cxx: g++,     ld: ld   }, arch: x86,   toolchain-prefix: ''                 }
          - { os: windows, image: windows-latest, compiler: { id: clang, ar: ar,  cc: clang, cxx: clang++, ld: ld   }, arch: x64,   toolchain-prefix: ''                 }
          - { os: windows, image: windows-latest, compiler: { id: clang, ar: ar,  cc: clang, cxx: clang++, ld: ld   }, arch: x86,   toolchain-prefix: ''                 }
    steps:
      - uses: actions/checkout@v3
      # Linux setup
      - name: Install cross build tools (linux, arm64)
        if: matrix.config.os == 'linux' && matrix.config.arch == 'arm64'
        run: sudo apt-get install crossbuild-essential-arm64 -y
      - name: Install cross build tools (linux, x86)
        if: matrix.config.os == 'linux' && matrix.config.arch == 'x86'
        run: sudo apt-get install crossbuild-essential-i386 -y
      - name: Install dependencies (linux)
        if: matrix.config.os == 'linux'
        run: sudo apt-get update && sudo apt-get install libwebkit2gtk-4.0-dev xvfb -y
      - name: Build and run tests (linux)
        if: matrix.config.os == 'linux'
        run: |
          if [[ ! -z "${{ matrix.config.pkg-config-sysroot }}" ]]; then
            echo "PKG_CONFIG_SYSROOT_DIR=${{ matrix.config.pkg-config-sysroot }}" >> ${GITHUB_ENV}
          fi
          xvfb-run python3 script/build.py \
            "--ar=${{ matrix.config.compiler.ar }}" \
            "--cc=${{ matrix.config.compiler.cc }}" \
            "--cxx=${{ matrix.config.compiler.cxx }}" \
            "--ld=${{ matrix.config.compiler.ld }}" \
            "--target-arch=${{ matrix.config.arch }}" \
            "--toolchain-prefix=${{ matrix.config.toolchain-prefix }}" \
            --build-examples --test
