name: CI Pipeline
on: [push, pull_request]

jobs:
  build:
    name: build-${{ matrix.config.os-family }}-${{ matrix.config.compiler-id }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            os-family: linux
            run-cmd: xvfb-run
            deps-cmd: sudo apt-get update && sudo apt-get install libwebkit2gtk-4.0-dev xvfb -y
            test-timeout: 10
            cc: 'gcc'
            cxx: 'g++'
            compiler-id: 'gcc'
          - os: ubuntu-latest
            os-family: linux
            run-cmd: xvfb-run
            deps-cmd: sudo apt-get update && sudo apt-get install libwebkit2gtk-4.0-dev xvfb -y
            test-timeout: 10
            cc: 'clang'
            cxx: 'clang++'
            compiler-id: 'clang'
          - os: macos-latest
            os-family: macos
            run-cmd: ''
            deps-cmd: ''
            test-timeout: 10
            cc: 'clang'
            cxx: 'clang++'
            compiler-id: 'clang'
          - os: windows-latest
            os-family: windows
            run-cmd: ''
            deps-cmd: 'choco upgrade mingw -y'
            test-timeout: 60
            cc: 'gcc'
            cxx: 'g++'
            compiler-id: 'gcc'
          - os: windows-latest
            os-family: windows
            run-cmd: ''
            deps-cmd: 'choco upgrade mingw -y'
            test-timeout: 60
            cc: 'clang'
            cxx: 'clang++'
            compiler-id: 'clang'
          - os: windows-latest
            os-family: windows
            run-cmd: ''
            deps-cmd: ''
            test-timeout: 60
            cc: 'cl'
            cxx: 'cl'
            compiler-id: 'msvc'
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        if: matrix.config.deps-cmd != ''
        run: ${{ matrix.config.deps-cmd }}
      - name: Activate MSVC environment
        if: matrix.config.compiler-id == 'msvc'
        run: python3 script/dev.py devenv | Invoke-Expression
      - name: Build and test
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: >
          ${{ matrix.config.run-cmd }} python3 script/dev.py clean configure
          --examples --tests build test --timeout=${{ matrix.config.test-timeout }}
          go:build go:test

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format
        uses: DoozyX/clang-format-lint-action@v0.6
        with:
          source: '.'
          exclude: './script'
          extensions: 'h,cc'
          clangFormatVersion: 9
          style: file
