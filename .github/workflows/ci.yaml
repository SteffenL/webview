name: CI Pipeline
on: [push, pull_request]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macOS was excluded because clang-tidy is not installed.
        include:
          - arch: x64
            os: ubuntu-latest
          - arch: x64
            os: windows-latest
          - arch: x86
            os: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install libwebkit2gtk-4.0-dev xvfb -y
      - name: Run lint checks
        if: runner.os == 'Windows'
        run: script\build.bat --lint=lax --target-arch=${{ matrix.arch }}
        shell: cmd
      - name: Run lint checks
        if: runner.os != 'Windows'
        run: script/build.sh --lint=lax --target-arch=${{ matrix.arch }}

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libwebkit2gtk-4.0-dev xvfb -y
      - name: Build and run tests
        run: xvfb-run ./script/build.sh --build-examples --test --go-test

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and run tests
        run: ./script/build.sh --build-examples --test --go-test

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86, x64]
        toolchain: [mingw, msvc]
        include:
          - arch: x64
            mingw_url: https://github.com/brechtsanders/winlibs_mingw/releases/download/12.2.0-14.0.6-10.0.0-msvcrt-r2/winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64msvcrt-10.0.0-r2.zip
            mingw_hash: 06be414c7d2e4b91bcfd089d693d942d824e686d244a25709e72a78d30b82ea4
          - arch: x86
            mingw_url: https://github.com/brechtsanders/winlibs_mingw/releases/download/12.2.0-14.0.6-10.0.0-msvcrt-r2/winlibs-i686-posix-dwarf-gcc-12.2.0-mingw-w64msvcrt-10.0.0-r2.zip
            mingw_hash: 03fc9f818f7691b43bfcd12b6c631e0ba662d1a82bde62718e6aa32d07a251f1
    steps:
      - uses: actions/checkout@v3
      # Replace the existing MinGW-w64 installation so that we have more control over the versions
      # we use, and this also allows us to have 64-bit and 32-bit versions side by side.
      # The MinGW-w64 distribution from https://winlibs.com/ is known to have good compatibility
      # with the webview library.
      # Distribution: GCC 12.2.0 + MinGW-w64 10.0.0 (MSVCRT) - release 2
      # The MSVCRT runtime was chosen over UCRT because MSVCRT is available on old versions of Windows
      # while UCRT has only been shipped with Windows since Windows 10.
      - name: Uninstall MinGW-w64
        if: matrix.toolchain == 'mingw'
        run: choco uninstall mingw
      - name: Install MinGW-w64
        if: matrix.toolchain == 'mingw'
        run: |
          $ProgressPreference = "SilentlyContinue"
          $temp_dir = [System.IO.Path]::GetTempPath()
          $zip_path = Join-Path $temp_dir ([System.IO.Path]::GetRandomFileName() + ".zip")
          Invoke-WebRequest -Uri "${{ matrix.mingw_url }}" -OutFile $zip_path
          Expand-Archive -LiteralPath $zip_path -DestinationPath "${env:SystemDrive}\"
      - name: Build and run tests
        run: script\build.bat --target-arch=${{ matrix.arch }} --toolchain=${{ matrix.toolchain }} --build-examples --test
        shell: cmd
      - name: Run Go tests
        if: matrix.toolchain == 'mingw'
        run: script\build.bat --target-arch=${{ matrix.arch }} --build=false --go-test
        shell: cmd

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format
        uses: DoozyX/clang-format-lint-action@v0.6
        with:
          source: '.'
          exclude: './script'
          extensions: 'h,cc'
          clangFormatVersion: 9
          style: file
