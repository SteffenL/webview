name: CI / Coverage / Collect
on:
  workflow_call:
    inputs:
      apt:
        type: string
        description: APT packages
        required: false
      cc:
        type: string
        description: C compiler executable
        required: true
      compiler-name:
        type: string
        description: Compiler name
        required: true
      cxx:
        type: string
        description: C++ compiler executable
        required: true
      cxx-std:
        type: string
        description: C++ standard
        required: true
      image:
        type: string
        description: Runner image
        required: true
      gen:
        type: string
        description: CMake generator
        required: false
      gcov:
        type: string
        description: gcov executable
        required: false
      gcovr-version:
        type: string
        description: gcovr version
        required: false
      msys:
        type: string
        description: MSYS2 system
        required: false
      report-dir:
        type: string
        description: Coverage report output directory
        required: false
      shell:
        type: string
        description: Shell
        required: false
      test-wrapper-cmd:
        type: string
        description: Test wrapper command
        required: false
      toolchain:
        type: string
        description: Toolchain name
        required: true
jobs:
  collect:
    runs-on: ${{ inputs.image }}
    defaults:
      run:
        shell: ${{ inputs.shell }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/workflows/setup-env
        with:
          apt: ${{ inputs.apt }}
          msys: ${{ inputs.msys }}

      - name: Build and run tests with coverage
        run: >
          ${{ inputs.test-wrapper-cmd }} ctest --build-and-test . build
          --build-generator "${{ inputs.gen }}"
          --build-config Profile
          --test-command ctest
          --output-on-failure
          --build-options
          "CMAKE_C_COMPILER=${{ inputs.cc }}"
          "CMAKE_CXX_COMPILER=${{ inputs.cxx }}"
          "CMAKE_CXX_STANDARD=${{ inputs.cxx-std }}"

      - name: Install gcovr
        run: pip install "gcovr==${{ inputs.gcovr-version }}"

      - name: Prepare test coverage artifacts
        id: prepare-test-coverage-artifacts
        run: |
          coverage_name="${{ inputs.image }}_${{ inputs.toolchain }}_${{ inputs.compiler-name }}_cxx${{ inputs.cxx-std }}"
          base_dir="temp_${RANDOM}"
          artifact_dir="${base_dir}/${coverage_name}"

          gcovr_args=(
            --config gcovr.ci.cfg
            --json "${artifact_dir}/coverage.json"
          )
          if [[ ! -z "${{ inputs.gcov }}" ]]; then
            gcovr_args+=(--gcov-executable "${{ inputs.gcov }}")
          fi

          mkdir -p "${artifact_dir}"
          gcovr "${gcovr_args[@]}"

          echo "upload-dir=${base_dir}" >> "${GITHUB_OUTPUT}"
          echo "coverage-name=${coverage_name}" >> "${GITHUB_OUTPUT}"

      - name: Upload test coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test_coverage_data_${{ steps.prepare-test-coverage-artifacts.outputs.coverage-name }}
          path: ${{ steps.prepare-test-coverage-artifacts.outputs.upload-dir }}
          retention-days: 1
          if-no-files-found: error
