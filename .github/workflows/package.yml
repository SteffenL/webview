name: CI / Package
on:
  workflow_call:
jobs:
  package:
    name: ${{ matrix.os }} (c++${{ matrix.cxx-std }}, ${{ matrix.a }}, ${{ matrix.t }}${{ matrix.ces }}${{ matrix.name-suffix }})
    runs-on: ${{ matrix.i }}
    strategy:
      matrix:
        include:
          # os:      Target operating systme
          # a:       Architecture
          # i:       Image
          # cxx-std: C++ standard
          # ces:     CMAKE_EXECUTABLE_SUFFIX
          # g:       CMake generator
          # t:       Toolchain
          # sh:      Shell
          #- { os: linux,   i: ubuntu-22.04, cxx-std: 20, a: host,       t: gnu,               ces: '-12',    g: Ninja Multi-Config,    sh: bash,        name-suffix: ', webkitgtk6.0', test-wrapper-cmd: xvfb-run, apt: gcc-12 g++-12,       webkitgtk-api: '6.0', docs: true, package-source: true }
          #- { os: linux,   i: ubuntu-22.04, cxx-std: 20, a: host,       t: gnu,               ces: '-12',    g: Ninja Multi-Config,    sh: bash,        name-suffix: ', webkitgtk4.1', test-wrapper-cmd: xvfb-run, apt: gcc-12 g++-12,       webkitgtk-api: '4.1' }
          #- { os: linux,   i: ubuntu-22.04, cxx-std: 20, a: host,       t: gnu,               ces: '-12',    g: Ninja Multi-Config,    sh: bash,        name-suffix: ', webkitgtk4.0', test-wrapper-cmd: xvfb-run, apt: gcc-12 g++-12,       webkitgtk-api: '4.0' }
          #- { os: linux,   i: ubuntu-22.04, cxx-std: 20, a: host,       t: llvm,              ces: '-15',    g: Ninja Multi-Config,    sh: bash,        name-suffix: ', webkitgtk6.0', test-wrapper-cmd: xvfb-run, apt: clang-15 clang++-15, webkitgtk-api: '6.0' }
          #- { os: linux,   i: ubuntu-22.04, cxx-std: 20, a: host,       t: llvm,              ces: '-15',    g: Ninja Multi-Config,    sh: bash,        name-suffix: ', webkitgtk4.1', test-wrapper-cmd: xvfb-run, apt: clang-15 clang++-15, webkitgtk-api: '4.1' }
          #- { os: linux,   i: ubuntu-22.04, cxx-std: 20, a: host,       t: llvm,              ces: '-15',    g: Ninja Multi-Config,    sh: bash,        name-suffix: ', webkitgtk4.0', test-wrapper-cmd: xvfb-run, apt: clang-15 clang++-15, webkitgtk-api: '4.0' }
          #- { os: linux,   i: ubuntu-20.04, cxx-std: 20, a: host,       t: gnu,               ces: '-10',    g: Ninja Multi-Config,    sh: bash,        name-suffix: ', webkitgtk4.0', test-wrapper-cmd: xvfb-run, apt: gcc-10 g++-10,       webkitgtk-api: '4.0' }
          #- { os: linux,   i: ubuntu-20.04, cxx-std: 20, a: host,       t: llvm,              ces: '-12',    g: Ninja Multi-Config,    sh: bash,        name-suffix: ', webkitgtk4.0', test-wrapper-cmd: xvfb-run, apt: clang-10 clang++-10, webkitgtk-api: '4.0' }
          #- { os: macos,   i: macos-14,     cxx-std: 20, a: universal, t: macos-llvm,        ces: '',       g: Xcode,                 sh: bash,        name-suffix: '',               osx-deployment-target: '10.9' }
          - { os: windows, i: ubuntu-22.04, cxx-std: 20, a: x86_64,    t: w64-mingw32,       ces: '-posix', g: Ninja Multi-Config,    sh: bash,        name-suffix: '',               apt: mingw-w64 }
          - { os: windows, i: ubuntu-22.04, cxx-std: 20, a: i686,      t: w64-mingw32,       ces: '-posix', g: Ninja Multi-Config,    sh: bash,        name-suffix: '',               apt: mingw-w64 }
          #- { os: windows, i: windows-2022, cxx-std: 20, a: arm64,     t: windows-msvc,      ces: '',       g: Visual Studio 17 2022, sh: bash,        name-suffix: '' }
          #- { os: windows, i: windows-2022, cxx-std: 20, a: x86_64,    t: windows-msvc,      ces: '',       g: Visual Studio 17 2022, sh: bash,        name-suffix: '' }
          #- { os: windows, i: windows-2022, cxx-std: 20, a: i686,      t: windows-msvc,      ces: '',       g: Visual Studio 17 2022, sh: bash,        name-suffix: '' }
          #- { os: windows, i: windows-2022, cxx-std: 20, a: x86_64,    t: msys2-gnu-ucrt64,  ces: '-posix', g: Ninja Multi-Config,    sh: 'msys2 {0}', name-suffix: ', UCRT64',       msys: UCRT64 }
          #- { os: windows, i: windows-2022, cxx-std: 20, a: x86_64,    t: msys2-gnu-clang64, ces: '-posix', g: Ninja Multi-Config,    sh: 'msys2 {0}', name-suffix: ', CLANG64',      msys: CLANG64 }
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/workflows/setup-env
        with:
          apt: ${{ matrix.apt }}
          msys: ${{ matrix.msys }}
          webkitgtk-api: ${{ matrix.webkitgtk-api }}

      - name: Generate variables
        id: vars
        run: |
          if [[ "${{ matrix.os }}" == "linux" ]]; then
            name="${{ runner.os }}_${{ matrix.i }}_cxx${{ matrix.cxx-std }}_${{ matrix.a }}_${{ matrix.t }}${{ matrix.ces }}_webkitgtk${{ matrix.webkitgtk-api }}"
          else
            name="${{ runner.os }}_${{ matrix.i }}_cxx${{ matrix.cxx-std }}_${{ matrix.a }}_${{ matrix.t }}${{ matrix.ces }}"
          fi
          echo "artifacts-name=${name}" >> "${GITHUB_OUTPUT}"

          cmake_options=()
          if [[ "${{ matrix.docs }}" == "true" ]]; then
            cmake_options+=(WEBVIEW_BUILD_DOCS=ON)
            cmake_options+=(WEBVIEW_INSTALL_DOCS=ON)
          fi
          cmake_options+=("CMAKE_EXECUTABLE_SUFFIX=${{ matrix.ces }}")
          echo "cmake-options=$(printf '%s\n' "${cmake_options[@]}")" >> "${GITHUB_OUTPUT}"
        shell: bash

      - name: CMake
        uses: ./.github/workflows/cmake
        with:
          artifacts-name: ${{ steps.vars.outputs.artifacts-name }}
          build-dir: build
          docs: ${{ matrix.docs }}
          docs-target: webview_docs
          cmake-options: ${{ steps.vars.outputs.cmake-options }}
          cxx-std: ${{ matrix.cxx-std }}
          generator: ${{ matrix.g }}
          osx-deployment-target: ${{ matrix.osx-deployment-target }}
          package: true
          package-source: ${{ matrix.package-source }}
          shell: ${{ matrix.sh }}
          source-dir: .
          test-wrapper-cmd: ${{ matrix.test-wrapper-cmd }}
          toolchain-file: cmake/toolchains/${{ matrix.a }}-${{ matrix.t }}.cmake

  merge-package-artifacts:
    needs: package
    runs-on: ubuntu-22.04
    steps:
      - name: Merge package artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: package
          pattern: package_*
          delete-merged: true
