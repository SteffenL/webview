name: CI / Package
on:
  workflow_call:
    inputs:
      gcovr-version:
        type: string
        description: gcovr version
        required: false
        default: '7.2'
jobs:
  linux:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        cxx-std: [20]
        image: [ubuntu-20.04, ubuntu-22.04]
        webkitgtk-api: ['4.0', '4.1', '6.0']
        exclude:
          - image: ubuntu-20.04
            webkitgtk-api: '6.0'
          - image: ubuntu-20.04
            webkitgtk-api: '4.1'
        include:
          # Compilers
          - image: ubuntu-22.04
            toolchain: llvm
            compiler-name: clang15
            cc: clang-15
            cxx: clang++-15
            apt: clang-15 clang++-15
          - image: ubuntu-22.04
            toolchain: gnu
            compiler-name: gcc12
            cc: gcc-12
            cxx: g++-12
            apt: gcc-12 g++-12
          - image: ubuntu-20.04
            toolchain: llvm
            compiler-name: clang12
            cc: clang-12
            cxx: clang++-12
            apt: clang-12 clang++-12
          - image: ubuntu-20.04
            toolchain: gnu
            compiler-name: gcc10
            cc: gcc-10
            cxx: g++-10
            apt: gcc-10 g++-10
          # WebKitGTK
          - webkitgtk-api: '6.0'
            apt-webkitgtk: libgtk-4-dev libwebkitgtk-6.0-dev
          - webkitgtk-api: '4.1'
            apt-webkitgtk: libgtk-3-dev libwebkit2gtk-4.1-dev
          - webkitgtk-api: '4.0'
            apt-webkitgtk: libgtk-3-dev libwebkit2gtk-4.0-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/workflows/setup-env
        with:
          apt: ${{ matrix.apt }} ${{ matrix.apt-webkitgtk }}

      - name: Build
        using: ./.github/workflows/cmake/build
        with:
          artifacts-name: ${{ runner.os }}_${{ matrix.toolchain }}_${{ matrix.compiler-name }}_cxx${{ matrix.cxx-std }}_webkitgtk${{ matrix.webkitgtk-api }}
          build-dir: build
          cc: ${{ matrix.cc }}
          cxx: ${{ matrix.cxx }}
          cxx-std: ${{ matrix.cxx-std }}
          generator: Ninja Multi-Config
          shell: bash
          source-dir: .
          test-wrapper-cmd: xvfb-run

  macos:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        cxx-std: [20]
        image: [macos-14]
        include:
          # Compilers
          - toolchain: llvm
            compiler-name: clang
            cc: clang
            cxx: clang++
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up environment
        uses: ./.github/workflows/setup-env

      - name: Build
        using: ./.github/workflows/cmake/build
        with:
          artifacts-name: ${{ runner.os }}_${{ matrix.toolchain }}_${{ matrix.compiler-name }}_cxx${{ matrix.cxx-std }}
          build-dir: build
          cc: ${{ matrix.cc }}
          cxx: ${{ matrix.cxx }}
          cxx-std: ${{ matrix.cxx-std }}
          generator: NXcode
          shell: bash
          source-dir: .
          test-wrapper-cmd:
        