name: Coverage
description: Produces test coverage reports.
inputs:
  report-dir:
    description: Coverage report output directory
    required: true
    default: report
  gcovr-version:
    description: Version of gcovr to install
    required: true
    default: '6.0'
runs:
  using: composite
  steps:
    - name: Install gcovr
      run: |
        # Install gcovr
        pip install "gcovr==${{ inputs.gcovr-version }}"
      shell: bash

    - name: Download test coverage artifacts
      uses: actions/download-artifact@v3
      with:
        name: test_coverage

    - name: Generate report
      run: |
        # Generate report
        tracefile_args=()
        while read f; do
          tracefile_args+=(--add-tracefile "${f}")
        done <<< "$(find . -type f -name "coverage.json")"
        mkdir -p "${{ inputs.report-dir }}/html"
        gcovr --json "${{ inputs.report-dir }}/gcovr.json" "${tracefile_args[@]}"
        gcovr --coveralls "${{ inputs.report-dir }}/coveralls.json" --add-tracefile "${{ inputs.report-dir }}/gcovr.json"
        gcovr --json-summary "${{ inputs.report-dir }}/summary.json" --add-tracefile "${{ inputs.report-dir }}/gcovr.json"
        gcovr --html-details "${{ inputs.report-dir }}/html/index.html" --add-tracefile "${{ inputs.report-dir }}/gcovr.json"
      shell: bash

    - name: Upload report artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test_coverage_report
        path: ${{ inputs.report-dir }}
        retention-days: 1
        if-no-files-found: error

    - name: Add report to CI job summary
      uses: actions/github-script@v6
      with:
        script: |
          const data = require("./${{ inputs.report-dir }}/summary.json");
          await core.summary
            .addHeading("Test Coverage Summary")
            .addTable([
              [
                { data: "Lines", header: true },
                { data: "Functions", header: true },
                { data: "Branches", header: true }
              ],
              [
                `${data.line_percent}% ${data.line_covered}/${data.line_total}`,
                `${data.function_percent}% ${data.function_covered}/${data.function_total}`,
                `${data.branch_percent}% ${data.branch_covered}/${data.branch_total}`
              ]
            ])
            .addTable([
              [
                { data: "File", header: true },
                { data: "Lines", header: true },
                { data: "Functions", header: true },
                { data: "Branches", header: true }
              ],
              ...data.files.map(file => [
                file.filename,
                `${file.line_percent}% ${file.line_covered}/${file.line_total}`,
                `${file.function_percent}% ${file.function_covered}/${file.function_total}`,
                `${file.branch_percent}% ${file.branch_covered}/${file.branch_total}`
              ])
            ])
            .write();

    - name: Upload test coverage to codecov
      uses: codecov/codecov-action@v4
      continue-on-error: true
      with:
        files: ${{ inputs.report-dir }}/coveralls.json
